
import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, Message, CallbackQuery

BOT_TOKEN = '7578190238:AAGDDU88ngPbMMRcPcXyqKCTyTeeGiNN08k'
bot = telebot.TeleBot(BOT_TOKEN)

team = {}

# === –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ===
def get_main_menu():
    markup = InlineKeyboardMarkup(row_width=2)
    markup.add(
        InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞", callback_data="action_add_member"),
        InlineKeyboardButton("üßë‚Äçüíº –ù–∞–∑–Ω–∞—á–∏—Ç—å —Ä–æ–ª—å", callback_data="action_assign_role"),
        InlineKeyboardButton("üìù –ù–∞–∑–Ω–∞—á–∏—Ç—å –∑–∞–¥–∞—á—É", callback_data="action_assign_task"),
        InlineKeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å —Ä–æ–ª—å", callback_data="action_remove_role"),
        InlineKeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É", callback_data="action_remove_task"),
        InlineKeyboardButton("üóë –£–¥–∞–ª–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞", callback_data="action_remove_member"),
        InlineKeyboardButton("üìã –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–º–∞–Ω–¥—É", callback_data="action_show_team")
    )
    return markup

# === –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ç–∞—Ä—Ç–∞ ===
@bot.message_handler(commands=['start'])
def start_handler(message: Message):
    bot.send_message(message.chat.id, "üëã –ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=get_main_menu())

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é ===
@bot.callback_query_handler(func=lambda call: call.data == "go_back")
def go_back_handler(call: CallbackQuery):
    bot.edit_message_text("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=get_main_menu())

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—è ===
@bot.callback_query_handler(func=lambda call: call.data.startswith("action_"))
def action_handler(call: CallbackQuery):
    action = call.data.replace("action_", "")
    msg = {
        "add_member": "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –Ω–æ–≤–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞:",
        "assign_role": "–í–≤–µ–¥–∏—Ç–µ –∏–º—è —É—á–∞—Å—Ç–Ω–∏–∫–∞, –∫–æ—Ç–æ—Ä–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–∑–Ω–∞—á–∏—Ç—å —Ä–æ–ª—å:",
        "assign_task": "–í–≤–µ–¥–∏—Ç–µ –∏–º—è —É—á–∞—Å—Ç–Ω–∏–∫–∞, –∫–æ—Ç–æ—Ä–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–∑–Ω–∞—á–∏—Ç—å –∑–∞–¥–∞—á—É:",
        "remove_role": "–í–≤–µ–¥–∏—Ç–µ –∏–º—è —É—á–∞—Å—Ç–Ω–∏–∫–∞, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å —Ä–æ–ª—å:",
        "remove_task": "–í–≤–µ–¥–∏—Ç–µ –∏–º—è —É—á–∞—Å—Ç–Ω–∏–∫–∞, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É:",
        "remove_member": "–í–≤–µ–¥–∏—Ç–µ –∏–º—è —É—á–∞—Å—Ç–Ω–∏–∫–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å:",
        "show_team": None
    }

    if action == "show_team":
        show_team(call.message)
        return

    bot.send_message(call.message.chat.id, msg[action])
    bot.register_next_step_handler_by_chat_id(call.message.chat.id, process_name_step, action)

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ ===
def process_name_step(message: Message, action: str):
    name = message.text.strip()

    if action == "add_member":
        if name in team:
            bot.send_message(message.chat.id, f"{name} —É–∂–µ –≤ –∫–æ–º–∞–Ω–¥–µ.", reply_markup=get_back_button())
        else:
            team[name] = {"role": None, "task": None}
            bot.send_message(message.chat.id, f"‚úÖ –£—á–∞—Å—Ç–Ω–∏–∫ {name} –¥–æ–±–∞–≤–ª–µ–Ω.", reply_markup=get_back_button())

    elif name not in team and action != "remove_member":
        bot.send_message(message.chat.id, f"‚ùå –£—á–∞—Å—Ç–Ω–∏–∫ {name} –Ω–µ –Ω–∞–π–¥–µ–Ω.", reply_markup=get_back_button())

    elif action == "assign_role":
        bot.send_message(message.chat.id, f"–í–≤–µ–¥–∏—Ç–µ —Ä–æ–ª—å –¥–ª—è {name}:")
        bot.register_next_step_handler_by_chat_id(message.chat.id, assign_custom_role, name)

    elif action == "assign_task":
        bot.send_message(message.chat.id, f"–í–≤–µ–¥–∏—Ç–µ –∑–∞–¥–∞—á—É –¥–ª—è {name}:")
        bot.register_next_step_handler_by_chat_id(message.chat.id, assign_custom_task, name)

    elif action == "remove_role":
        team[name]['role'] = None
        bot.send_message(message.chat.id, f"üßπ –†–æ–ª—å —É {name} —É–¥–∞–ª–µ–Ω–∞.", reply_markup=get_back_button())

    elif action == "remove_task":
        team[name]['task'] = None
        bot.send_message(message.chat.id, f"üßπ –ó–∞–¥–∞—á–∞ —É {name} —É–¥–∞–ª–µ–Ω–∞.", reply_markup=get_back_button())

    elif action == "remove_member":
        if name in team:
            del team[name]
            bot.send_message(message.chat.id, f"üóë –£—á–∞—Å—Ç–Ω–∏–∫ {name} —É–¥–∞–ª—ë–Ω.", reply_markup=get_back_button())
        else:
            bot.send_message(message.chat.id, f"‚ùå –£—á–∞—Å—Ç–Ω–∏–∫ {name} –Ω–µ –Ω–∞–π–¥–µ–Ω.", reply_markup=get_back_button())

# === –†—É—á–Ω–æ–π –≤–≤–æ–¥ —Ä–æ–ª–∏ ===
def assign_custom_role(message: Message, name: str):
    role = message.text.strip()
    team[name]['role'] = role
    bot.send_message(message.chat.id, f"‚úÖ {name} –Ω–∞–∑–Ω–∞—á–µ–Ω(–∞) –Ω–∞ —Ä–æ–ª—å: {role}", reply_markup=get_back_button())

# === –†—É—á–Ω–æ–π –≤–≤–æ–¥ –∑–∞–¥–∞—á–∏ ===
def assign_custom_task(message: Message, name: str):
    task = message.text.strip()
    team[name]['task'] = task
    bot.send_message(message.chat.id, f"üìù {name} –ø–æ–ª—É—á–∏–ª(–∞) –∑–∞–¥–∞—á—É: {task}", reply_markup=get_back_button())

# === –ü–æ–∫–∞–∑ –∫–æ–º–∞–Ω–¥—ã ===
def show_team(message: Message):
    if not team:
        bot.send_message(message.chat.id, "üë• –ö–æ–º–∞–Ω–¥–∞ –ø—É—Å—Ç–∞.", reply_markup=get_back_button())
        return
    msg = "üë• –°–æ—Å—Ç–∞–≤ –∫–æ–º–∞–Ω–¥—ã:\n"
    for name, info in team.items():
        msg += f"üî∏ {name} | üßë‚Äçüíº {info['role'] or '‚Äî'} | üìù {info['task'] or '‚Äî'}\n"
    bot.send_message(message.chat.id, msg, reply_markup=get_back_button())

# === –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ ===
def get_back_button():
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="go_back"))
    return markup

# === –ó–∞–ø—É—Å–∫ ===
print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
bot.infinity_polling()
